using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;
using BudgetSys.Models;

namespace BudgetSys
{
    /// <summary>
    /// SaveWindow.xaml 的交互逻辑
    /// </summary>
    public partial class SaveWindow: Window 
    {
        private Action<MasterBase> DeleteDelegate;

        private string filePath;
       
        public SaveWindow( )
        {
            InitializeComponent();
        }


        public void LoadSource<T>()where T:MasterBase, new()
        {
            gb.Header = new T().GetType().Name;
            filePath = Sys.configPath + new T().GetType().Name + ".json";
            var source = Newtonsoft.Json.JsonConvert.DeserializeObject<ObservableCollection<T>>(File.ReadAllText(filePath));
            DeleteDelegate = item=>
            {
                source.Remove(item as T);
            };

            this.DataContext = source;
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            var jsonStr = Newtonsoft.Json.JsonConvert.SerializeObject(dgDetail.DataContext);
            File.WriteAllText(filePath, jsonStr);
            MessageBox.Show("保存成功,重启系统后生效", "提示");
            Sys.Reset();
            this.Close();
        }

        private void Button_Click_1(object sender, RoutedEventArgs e)
        {
            this.Close();
        }

        private void DataGrid_AutoGeneratingColumn(object sender, DataGridAutoGeneratingColumnEventArgs e)
        {
            //if (e.PropertyName.ToUpper() == "ID")
            //    e.Cancel = true;
            if (e.PropertyName == "id")
            {
                e.Column.IsReadOnly = true;
            }
        }

        private void DataGrid_InitializingNewItem(object sender, InitializingNewItemEventArgs e)
        {
            var dg = sender as DataGrid;
            PropertyInfo prop = e.NewItem.GetType().GetProperty("id", BindingFlags.Public | BindingFlags.Instance);
            if (null != prop && prop.CanWrite)
            {
                prop.SetValue(e.NewItem, dg.Items.Count-2, null);
            }
        }

        private void DataGrid_AutoGeneratedColumns(object sender, EventArgs e)
        {
            var dgDetail = sender as DataGrid;
            foreach (DataGridColumn col in dgDetail.Columns)
            {
                if (col.Header.ToString() == "id")
                {
                    col.DisplayIndex = 0;
                }
            }
        }

        private void BtnDelete_Click(object sender, RoutedEventArgs e)
        {
            DeleteDelegate(dgDetail.SelectedItem as MasterBase);
        }
    }
}
